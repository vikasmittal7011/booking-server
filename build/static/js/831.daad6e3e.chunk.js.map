{"version":3,"file":"static/js/831.daad6e3e.chunk.js","mappings":"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","sources":["components/booking/Details.js","components/common/SimpleLoading.js","components/booking/Form.js","pages/Booking.js"],"sourcesContent":["const Details = ({ hotel, bookingInfo, nights, showNameAndLocation = true }) => {\r\n    return (\r\n        <div className=\"grid gap-4 rounded-lg border border-slate-300 p-4 h-fit\">\r\n            <h1 className=\"text-xl font-bold\">Your Booking Info</h1>\r\n\r\n            {showNameAndLocation &&\r\n                <>\r\n                    <div className=\"border-b py-2\">\r\n                        Name:\r\n                        <div className=\"font-bold\">{hotel.name}</div>\r\n                    </div>\r\n\r\n                    <div className=\"border-b py-2\">\r\n                        Location:\r\n                        <div className=\"font-bold\">{hotel.addressLine}, {hotel.state}, {hotel.country}, {hotel.pin}</div>\r\n                    </div>\r\n                </>\r\n            }\r\n\r\n            <div className=\"flex justify-between items-center border-b py-2\">\r\n                <div>\r\n                    Ckeck In:\r\n                    <div className=\"font-bold\">{new Date(bookingInfo.checkIn).toDateString()}</div>\r\n                </div>\r\n                <div>\r\n                    Ckeck Out:\r\n                    <div className=\"font-bold\">{new Date(bookingInfo.checkOut).toDateString()}</div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"flex justify-between items-center border-b py-2\">\r\n                <div>\r\n                    Number Of Nights Stay:\r\n                    <div className=\"font-bold\">{nights}</div>\r\n                </div>\r\n                {bookingInfo?.price && <div>\r\n                    Total Payment\r\n                    <div className=\"font-bold\">{bookingInfo.price}\r\n                    </div>\r\n                </div>}\r\n            </div>\r\n\r\n            <div className=\"border-b py-2\">\r\n                Guests:\r\n                <div className=\"font-bold\">{bookingInfo.adultCount} Adults & {bookingInfo.childCount || 0} Children</div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Details\r\n","import { ClipLoader } from \"react-spinners\"\r\n\r\nconst SimpleLoading = () => {\r\n    return (\r\n        <div className=\"justify-center flex items-center\">\r\n            <ClipLoader size={100} color=\"blue\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SimpleLoading\r\n","import { useDispatch, useSelector } from \"react-redux\"\r\nimport { selectuser } from \"../../features/user/userSlice\"\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useEffect } from \"react\";\r\nimport { createPaymentIntentAsync, selectbooking } from \"../../features/booking/bookingSlice\";\r\n\r\nconst Form = ({ hotel, nights, bookingInfo }) => {\r\n\r\n    const { user } = useSelector(selectuser);\r\n\r\n    const { info, intentCreated } = useSelector(selectbooking);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { register, setValue, handleSubmit } = useForm({\r\n        defaultValues: user\r\n    });\r\n\r\n    const onSubmit = handleSubmit(() => {\r\n        dispatch(createPaymentIntentAsync(nights * hotel.discountedPrice))\r\n    })\r\n\r\n    const handlePayment = () => {\r\n        const { data, key } = info;\r\n        const callback_url = `${process.env.REACT_APP_URL}booking/paymentverification?checkIn=${bookingInfo.checkIn}&checkOut=${bookingInfo.checkOut}&hotel=${hotel.id}&adultCount=${bookingInfo.adultCount}&childCount=${bookingInfo.childCount}&price=${nights * hotel.discountedPrice}`;\r\n\r\n        const options = {\r\n            key,\r\n            amount: +data.amount,\r\n            currency: \"INR\",\r\n            name: \"Vikey's Holidays\",\r\n            description: \"Vikey's Holidays Online Payment\",\r\n            image: hotel.photos[0],\r\n            order_id: data.id,\r\n            callback_url,\r\n            prefill: {\r\n                name: user.name,\r\n                email: user.email,\r\n            },\r\n            notes: JSON.stringify({\r\n                address: \"Razorpay Corporate Office\",\r\n                bookingInfo: { ...bookingInfo, hotel: hotel.id }\r\n            }),\r\n            theme: {\r\n                color: \"#3399cc\"\r\n            }\r\n        };\r\n        const razor = new window.Razorpay(options);\r\n        razor.open()\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (intentCreated) {\r\n            handlePayment()\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [intentCreated]);\r\n\r\n    useEffect(() => {\r\n        setValue(\"firstName\", user.firstName)\r\n        setValue(\"lastName\", user.lastName)\r\n        setValue(\"email\", user.email)\r\n    }, [setValue, user.email, user.firstName, user.lastName]);\r\n\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"grid grid-cols-1 gap-5 rounded-md border border-slate-300 p-5\">\r\n            <h1 className=\"text-3xl font-bold\">Confim Your Details</h1>\r\n\r\n            <div className='grid grid-cols-2 gap-6'>\r\n                <label className='text-gray-700 text-sm font-bold flex-1'>\r\n                    First Name:\r\n                    <input\r\n                        {...register(\"firstName\")}\r\n                        type=\"text\"\r\n                        className='mt-1 border rounded w-full py-2 px-3 bg-gray-200'\r\n                        readOnly\r\n                        disabled\r\n                    />\r\n                </label>\r\n                <label className='text-gray-700 text-sm font-bold flex-1'>\r\n                    Last Name:\r\n                    <input\r\n                        {...register(\"lastName\")}\r\n                        type=\"text\"\r\n                        className='mt-1 border rounded w-full py-2 px-3 bg-gray-200'\r\n                        readOnly\r\n                        disabled\r\n                    />\r\n                </label>\r\n            </div>\r\n            <label className='text-gray-700 text-sm font-bold flex-1'>\r\n                Email:\r\n                <input\r\n                    type=\"text\"\r\n                    className='mt-1 border rounded w-full py-2 px-3 bg-gray-200'\r\n                    readOnly\r\n                    disabled\r\n                    {...register(\"email\")}\r\n                />\r\n            </label>\r\n\r\n            <div>\r\n                <h1 className=\"text-xl font-semibold\">Price Summary</h1>\r\n                <div className=\"bg-blue-200 p-4 my-3 rounded-md\">\r\n                    <div className=\"font-semibold text-xl\">Total Cost: ₹ {hotel.discountedPrice * nights}</div>\r\n                    <p className=\"text-xs\">Includes All Taxes & Charges</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"flex justify-end\">\r\n                <button type=\"submit\" className=\"bg-blue-600 text-white p-2 font-bold hover:bg-blue-500 transition-all outline-none rounded-md\">Confirm Booking</button>\r\n            </div>\r\n\r\n        </form>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Form\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { getHotelByIdAsync, selecthotel } from \"../features/hotel/hotelSlice\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport SimpleLoading from \"../components/common/SimpleLoading\";\r\nimport Details from \"../components/booking/Details\";\r\nimport Form from \"../components/booking/Form\";\r\n\r\nconst Booking = () => {\r\n    const [nights, setNights] = useState();\r\n\r\n    const { id } = useParams();\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const { status, fetchedHotel: hotel } = useSelector(selecthotel);\r\n\r\n    const bookingInfo = JSON.parse(localStorage.getItem(\"bookingInfo\"))\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (bookingInfo.checkIn && bookingInfo.checkOut) {\r\n            const nights = Math.abs(new Date(bookingInfo.checkOut).getTime() - new Date(bookingInfo.checkIn).getTime()) / (1000 * 60 * 60 * 24);\r\n            setNights(Math.ceil(nights))\r\n        }\r\n    }, [bookingInfo.checkIn, bookingInfo.checkOut]);\r\n\r\n    useEffect(() => {\r\n        dispatch(getHotelByIdAsync(id));\r\n    }, [dispatch, id]);\r\n\r\n    useEffect(() => {\r\n        if (!bookingInfo?.checkIn)\r\n            navigate(\"/\")\r\n    }, [bookingInfo?.checkIn, hotel.name, navigate]);\r\n\r\n    return (\r\n        <>\r\n            {status === \"loading\" ?\r\n                <SimpleLoading />\r\n                :\r\n                <>\r\n                    {hotel.name ?\r\n                        <div className=\"grid md:grid-cols-[1fr_2fr] gap-5\">\r\n                            <Details hotel={hotel} bookingInfo={bookingInfo} nights={nights} />\r\n                            <Form hotel={hotel} nights={nights} bookingInfo={bookingInfo} />\r\n                        </div>\r\n                        :\r\n                        <div className=\"text-red-500 flex justify-center font-bold text-3xl\">Hotel Not Found</div>\r\n                    }\r\n                </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Booking\r\n"],"names":["_ref","hotel","bookingInfo","nights","showNameAndLocation","_jsxs","className","children","_jsx","_Fragment","name","addressLine","state","country","pin","Date","checkIn","toDateString","checkOut","price","adultCount","childCount","SimpleLoading","ClipLoader","size","color","user","useSelector","selectuser","info","intentCreated","selectbooking","dispatch","useDispatch","register","setValue","handleSubmit","useForm","defaultValues","onSubmit","createPaymentIntentAsync","discountedPrice","useEffect","handlePayment","data","key","callback_url","concat","process","id","options","amount","currency","description","image","photos","order_id","prefill","email","notes","JSON","stringify","address","theme","window","Razorpay","open","firstName","lastName","type","readOnly","disabled","Booking","setNights","useState","useParams","navigate","useNavigate","status","fetchedHotel","selecthotel","parse","localStorage","getItem","Math","abs","getTime","ceil","getHotelByIdAsync","Details","Form"],"sourceRoot":""}