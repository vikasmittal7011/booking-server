{"version":3,"file":"static/js/390.61a0ea14.chunk.js","mappings":"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","sources":["constant/index.js","components/register/RegisterForm.js","components/register/OTPForm.js","pages/Register.js"],"sourcesContent":["export const scrollToTop = () => {\r\n    window.scrollTo(0, 0);\r\n}\r\n\r\nexport const inputClass = \"border-2 border-blue-400 focus:outline-blue-800 rounded-md w-full py-2 px-2 font-normal mt-2 text-lg\";\r\n\r\nexport const labelClass = \"font-bold text-gray-700 text-lg flex-1\";\r\n\r\nexport const hotelTypes = [\r\n    \"Budget\",\r\n    \"Boutique\",\r\n    \"Luxury\",\r\n    \"Ski Resort\",\r\n    \"Business\",\r\n    \"Family\",\r\n    \"Romantic\",\r\n    \"Hiking Resort\",\r\n    \"Cabin\",\r\n    \"Beach Resort\",\r\n    \"Golf Resort\",\r\n    \"Motel\",\r\n    \"All Inclusive\",\r\n    \"Pet Friendly\",\r\n    \"Self Catering\",\r\n];\r\n\r\nexport const hotelPerks = [\r\n    \"Free WiFi\",\r\n    \"Parking\",\r\n    \"Airport Shuttle\",\r\n    \"Family Rooms\",\r\n    \"Non-Smoking Rooms\",\r\n    \"Outdoor Pool\",\r\n    \"Spa\",\r\n    \"Fitness Center\",\r\n];\r\n\r\nexport const sortOptions = [\r\n    { name: \"Best Rating\", sort: \"star\", order: \"desc\", current: false },\r\n    {\r\n        name: \"Price: Low to High\",\r\n        sort: \"discountedPrice\",\r\n        order: \"asc\",\r\n        current: false,\r\n    },\r\n    {\r\n        name: \"Price: High to Low\",\r\n        sort: \"discountedPrice\",\r\n        order: \"desc\",\r\n        current: false,\r\n    },\r\n];","import { useForm } from \"react-hook-form\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { generateOTPAync, selectauth } from \"../../features/auth/authSlice\"\r\nimport { useEffect } from \"react\"\r\nimport { ClipLoader } from \"react-spinners\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { inputClass, labelClass, scrollToTop } from \"../../constant\"\r\n\r\nconst RegisterForm = () => {\r\n\r\n    const { sendOTP, userData, status } = useSelector(selectauth)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        watch,\r\n        formState: { errors },\r\n        setValue\r\n    } = useForm()\r\n\r\n    const onSubmit = handleSubmit(async (data) => {\r\n        dispatch(generateOTPAync(data))\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (sendOTP) {\r\n            setValue(\"firstName\", userData.firstName)\r\n            setValue(\"lastName\", userData.lastName)\r\n            setValue(\"email\", userData.email)\r\n            setValue(\"password\", userData.password)\r\n            setValue(\"confirmPassword\", userData.confirmPassword)\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [sendOTP]);\r\n\r\n    return (\r\n        <form className=\"flex flex-col gap-5 w-full\" onSubmit={onSubmit}>\r\n            <h2 className=\"text-3xl font-bold\">Create An Account</h2>\r\n\r\n            <div className=\"flex flex-col md:flex-row gap-5\">\r\n                <label className={labelClass}>First Name\r\n                    <input {...register(\"firstName\", { required: \"Pleace Enter First Name...\" })} className={inputClass} />\r\n                    {errors.firstName && <span className=\"text-red-500\">{errors.firstName.message}</span>}\r\n                </label>\r\n\r\n                <label className={labelClass}>Last Name\r\n                    <input {...register(\"lastName\", { required: \"Pleace Enter Last Name...\" })} className={inputClass} />\r\n                    {errors.lastName && <span className=\"text-red-500\">{errors.lastName.message}</span>}\r\n                </label>\r\n            </div>\r\n\r\n            <label className={labelClass}>Email\r\n                <input type=\"email\" {...register(\"email\", {\r\n                    required: \"Pleace Enter Email...\", pattern: {\r\n                        value: /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z]{2,}(?:\\.[a-zA-Z]{2,})?$/,\r\n                        message: \"Please enter a valid email address.\"\r\n                    }\r\n                })} className={inputClass} />\r\n                {errors.email && <span className=\"text-red-500\">{errors.email.message}</span>}\r\n            </label>\r\n\r\n            <label className={labelClass}>Password\r\n                <input type=\"password\" {...register(\"password\", {\r\n                    required: \"Pleace Enter Password...\", minLength: { value: 8, message: \"Password Must Be 8 Char Long\" }, pattern: {\r\n                        value: /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z])(?=.*[!@#$%^&*]).{8,}$/,\r\n                        message: \"Password must contain at least one uppercase letter, one lowercase letter, one number, and one special character (!@#$%^&*)\"\r\n                    }\r\n                })} className={inputClass} />\r\n                {errors.password && <span className=\"text-red-500\">{errors.password.message}</span>}\r\n            </label>\r\n\r\n            <label className={labelClass}>Confirm Password\r\n                <input type=\"password\" {...register(\"confirmPassword\", { validate: (val) => { if (!val) { return \"Place Same Password...\" } else if (watch(\"password\") !== val) { return \"Your password dose not match\" } } })} className={inputClass} />\r\n                {errors.confirmPassword && <span className=\"text-red-500\">{errors.confirmPassword.message}</span>}\r\n            </label>\r\n\r\n            <div className=\"flex flex-col md:flex-row justify-between md:items-center gap-5\">\r\n                <span className=\"flex gap-1\">\r\n                    Already have an account?\r\n                    <Link onClick={scrollToTop} to=\"/login\" className=\"outline-none underline text-blue-600 transition-all hover:text-cyan-800\">\r\n                        Login!\r\n                    </Link>\r\n                </span>\r\n                <button type=\"submit\" className={`bg-blue-700 outline-none text-white p-2 px-4 rounded-md font-bold text-xl hover:bg-blue-500 transition-all ${status === \"loading\" ? \"cursor-not-allowed\" : \"cursor-pointer\"} flex justify-center items-center gap-2`}>\r\n                    <ClipLoader size={20} color=\"white\" loading={status === \"loading\"} />\r\n                    <div>Create Account</div>\r\n                </button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default RegisterForm\r\n","import { useForm } from \"react-hook-form\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { registerUserAync, retypeData, selectauth } from \"../../features/auth/authSlice\"\r\nimport { ClipLoader } from \"react-spinners\"\r\nimport { inputClass, labelClass, scrollToTop } from \"../../constant\"\r\n\r\nconst OTPForm = () => {\r\n\r\n\r\n    const { userData, status } = useSelector(selectauth);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClick = () => {\r\n        scrollToTop();\r\n        dispatch(retypeData());\r\n    }\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        formState: { errors },\r\n    } = useForm();\r\n\r\n    const onSubmit = handleSubmit(async (data) => {\r\n        dispatch(registerUserAync({ ...userData, ...data }));\r\n    })\r\n\r\n\r\n\r\n    return (\r\n        <form className=\"flex flex-col gap-5\" onSubmit={onSubmit}>\r\n            <h2 className=\"text-3xl font-bold\">Verify OTP</h2>\r\n            <label className={labelClass}>Enter OTP\r\n                <input {...register(\"otp\", { required: \"Pleace Enter First Name...\", minLength: { value: 6, message: \"OTP Should be 6 Digit\" }, maxLength: { value: 6, message: \"OTP Should be 6 Digit\" } })} className={inputClass} />\r\n                {errors.otp && <span className=\"text-red-500\">{errors.otp.message}</span>}\r\n            </label>\r\n\r\n            <div className=\"flex flex-col md:flex-row justify-between md:items-center gap-5\">\r\n                <span onClick={handleClick} className=\"cursor-pointer underline text-blue-600 hover:text-cyan-800\">Enter Email Again</span>\r\n                <button type=\"submit\" className={`outline-none bg-blue-700 text-white p-2 px-4 rounded-md font-bold text-xl hover:bg-blue-500 transition-all ${status === \"loading\" ? \"cursor-not-allowed\" : \"cursor-pointer\"} flex justify-center items-center gap-2`}>\r\n                    <ClipLoader size={20} color=\"white\" loading={status === \"loading\"} />\r\n                    <div>Verify OTP</div>\r\n                </button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default OTPForm\r\n","import RegisterForm from \"../components/register/RegisterForm\";\r\nimport OTPForm from \"../components/register/OTPForm\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { clearMessage, out, selectauth } from \"../features/auth/authSlice\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport Toast from \"../components/common/Toast\";\r\n\r\nconst Register = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const { sendOTP, registerSuccess, status, message } = useSelector(selectauth);\r\n\r\n    useEffect(() => {\r\n        if (registerSuccess) {\r\n            dispatch(out());\r\n            return navigate(\"/\");\r\n        }\r\n    }, [registerSuccess, navigate, dispatch]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Toast type={status === \"failed\" ? \"error\" : \"success\"} message={message} clearMessage={clearMessage} />\r\n            {\r\n                !sendOTP ?\r\n                    <RegisterForm />\r\n                    :\r\n                    <OTPForm />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Register\r\n"],"names":["scrollToTop","window","scrollTo","inputClass","labelClass","hotelTypes","hotelPerks","sortOptions","name","sort","order","current","RegisterForm","sendOTP","userData","status","useSelector","selectauth","dispatch","useDispatch","register","handleSubmit","watch","formState","errors","setValue","useForm","onSubmit","async","generateOTPAync","data","useEffect","firstName","lastName","email","password","confirmPassword","_jsxs","className","children","_jsx","required","message","type","pattern","value","minLength","validate","val","Link","onClick","to","concat","ClipLoader","size","color","loading","OTPForm","registerUserAync","maxLength","otp","handleClick","retypeData","Register","navigate","useNavigate","registerSuccess","out","_Fragment","Toast","clearMessage"],"sourceRoot":""}